name: Test & Lint

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Check formatting
        if: matrix.os == 'ubuntu-latest'
        run: deno fmt --check

      - name: Check linting
        if: matrix.os == 'ubuntu-latest'
        run: deno lint

      - name: Type check
        run: deno check src/mod.ts

      - name: Run tests
        run: deno task test

      - name: Verify package
        run: deno publish --dry-run

      - name: Generate coverage
        if: matrix.os == 'ubuntu-latest'
        run: deno test -A --coverage=coverage

      - name: Generate LCOV report
        if: matrix.os == 'ubuntu-latest'
        run: deno coverage coverage --lcov > coverage.lcov

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.lcov
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
